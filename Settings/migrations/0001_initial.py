# Generated by Django 3.2.9 on 2023-01-09 14:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('General', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppNotificaiton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appNoti_image', to='General.mediafile')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='General.mediafile')),
            ],
        ),
        migrations.CreateModel(
            name='Coupons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(blank=True, null=True)),
                ('unitType', models.IntegerField(choices=[(1, 'percent'), (2, 'amount')], default=1)),
                ('discount', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('expiresAt', models.DateTimeField(blank=True, null=True)),
                ('status', models.BooleanField(default=False)),
                ('isReward', models.BooleanField(default=False)),
                ('createdAt', models.DateField(auto_now=True)),
                ('updatedAt', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True)),
                ('symbol', models.CharField(blank=True, max_length=1, null=True)),
                ('place', models.IntegerField(choices=[(1, 'prefix'), (2, 'suffix')], default=1)),
                ('isDefault', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=False)),
                ('transferRate', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GoogleMapSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('googleMapKey', models.TextField(blank=True, null=True)),
                ('distanceUnit', models.IntegerField(choices=[(1, 'Km'), (2, 'm'), (3, 'mi')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='MaintainanceMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('message', models.TextField(blank=True, default='MaintainanceMode', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billNo', models.IntegerField(default=0)),
                ('receiptNo', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Paymentcredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True)),
                ('publicKey', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PushNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firebaseCloudKey', models.TextField(blank=True, null=True)),
                ('apiKey', models.TextField(blank=True, null=True)),
                ('databaseUrl', models.TextField(blank=True, null=True)),
                ('storageBucket', models.TextField(blank=True, null=True)),
                ('appId', models.TextField(blank=True, null=True)),
                ('authDomain', models.TextField(blank=True, null=True)),
                ('projectID', models.TextField(blank=True, null=True)),
                ('senderID', models.TextField(blank=True, null=True)),
                ('measurementID', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RewardCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.IntegerField(default=0)),
                ('type', models.IntegerField(choices=[(1, 'percent'), (2, 'amount')], default=2)),
                ('cost', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SMTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mailHost', models.TextField(blank=True, null=True)),
                ('mailPort', models.TextField(blank=True, null=True)),
                ('encryption', models.TextField(blank=True, null=True)),
                ('username', models.TextField(blank=True, null=True)),
                ('password', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True)),
                ('status', models.BooleanField(default=False)),
                ('appID', models.TextField(blank=True, null=True)),
                ('appSecret', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(blank=True, null=True)),
                ('isDefault', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User_Coupons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used', models.BooleanField(default=False)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Settings.coupons')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RewardCoupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupons', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reward_coupon', to='Settings.coupons')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reward_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0)),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FAQCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True)),
                ('createdAt', models.DateField(auto_now=True)),
                ('updatedAt', models.DateField(blank=True, null=True)),
                ('cover_Image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='General.mediafile')),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateField(auto_now=True)),
                ('updatedAt', models.DateField(blank=True, null=True)),
                ('faqCategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Settings.faqcategory')),
            ],
        ),
        migrations.CreateModel(
            name='appSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appName', models.TextField(blank=True, null=True)),
                ('shortDescription', models.TextField(blank=True, null=True)),
                ('isDarkMode', models.BooleanField(default=False)),
                ('terms', models.TextField(blank=True, null=True)),
                ('privacy', models.TextField(blank=True, null=True)),
                ('aboutUs', models.TextField(blank=True, null=True)),
                ('versionNumber', models.TextField(blank=True, null=True)),
                ('referReward', models.IntegerField(blank=True, null=True)),
                ('facebook', models.TextField(blank=True, null=True)),
                ('instagram', models.TextField(blank=True, null=True)),
                ('github', models.TextField(blank=True, null=True)),
                ('cashBackPercentage', models.IntegerField(blank=True, default=0, null=True)),
                ('supportPhone', models.TextField(blank=True, null=True)),
                ('supportEmail', models.CharField(blank=True, max_length=255, null=True)),
                ('supportAddress', models.TextField(blank=True, null=True)),
                ('companyName', models.TextField(blank=True, null=True)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Settings.currency')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='General.mediafile', verbose_name='app_icon')),
            ],
        ),
        migrations.CreateModel(
            name='AppNotificaitonUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seen', models.BooleanField(default=False)),
                ('appNotification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Settings.appnotificaiton')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
